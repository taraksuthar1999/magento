<?php //print_r(mage::registry('entity_attribute'));
?>
<form action="<?php echo Mage::getUrl('vendor/attribute/save'); ?>" method="post">
    <!-- <table>
        <tr>
            <td><label for="frontlabel">Frontend Label</label></td>
            <td><input type="text" name="frontend_label" value="" id="frontlabel"></td>
        </tr>
        <tr>
            <td><label for="">Frontend Input</label></td>
            <td><select name="frontend_type" id="">
                    <option value="text">Text Field</option>
                    <option value="textarea">Text Area</option>
                    <option value="date">Date</option>
                    <option value="boolean">Yes/No</option>
                    <option value="multiselect">Multiple Select</option>
                    <option value="select">Dropdown</option>
                    <option value="price">Price</option>
                    <option value="media_image">Media Image</option>



                </select></td>
        </tr>
        <tr>
            <td><input type="checkbox"></td>
            <td><label for="">Select Group</label></td>
        </tr>
        <tr>
            <td><select name="" id=""></select></td>
        </tr>
        <tr>
            <td><input type="submit" value="Save"></td>
        </tr>

    </table> -->


    <div class="entity-edit">
        <div class="entry-edit-head">
            <h4 class="icon-head head-edit-form fieldset-legend"><?php echo Mage::helper('vendor')->__('Manage Titles (Size, Color, etc.)') ?></h4>
        </div>
        <div class="box">
            <div class="hor-scroll">
                <table class="dynamic-grid" cellspacing="0" id="attribute-labels-table">
                    <tr>
                        <?php foreach ($this->getStores() as $_store) : ?>
                            <th><?php echo $this->escapeHtml($_store->getName()); ?></th>
                        <?php endforeach; ?>
                    </tr>
                    <tr>
                        <?php $_labels = $this->getLabelValues() ?>
                        <?php foreach ($this->getStores() as $_store) : ?>
                            <td>
                                <input class="input-text<?php if ($_store->getId() == 0) : ?> required-option<?php endif; ?>" type="text" name="frontend_label[<?php echo $_store->getId() ?>]" value="<?php echo $this->escapeHtml($_labels[$_store->getId()]) ?>" <?php if ($this->getReadOnly()) : ?> disabled="disabled" <?php endif; ?> />
                            </td>
                        <?php endforeach; ?>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <br />
    <div class="entity-edit" id="matage-options-panel">
        <div class="entry-edit-head">
            <h4 class="icon-head head-edit-form fieldset-legend"><?php echo Mage::helper('vendor')->__('Manage Options (values of your attribute)') ?></h4>
        </div>
        <div class="box">
            <div class="hor-scroll">
                <table class="dynamic-grid" cellspacing="0" cellpadding="0">
                    <tr id="attribute-options-table">
                        <?php foreach ($this->getStores() as $_store) : ?>
                            <th><?php echo $this->escapeHtml($_store->getName()); ?></th>
                        <?php endforeach; ?>
                        <th><?php echo Mage::helper('vendor')->__('Position') ?></th>
                        <th class="nobr a-center"><?php echo Mage::helper('vendor')->__('Is Default') ?></th>
                        <th>11
                            <?php if (!$this->getReadOnly()) : ?>22
                            <?php echo $this->getAddNewButtonHtml() ?>
                        <?php endif; ?>
                        </th>
                    </tr>
                    <tr class="no-display template" id="row-template">
                        <?php foreach ($this->getStores() as $_store) : ?>
                            <td><input name="option[value][{{id}}][<?php echo $_store->getId() ?>]" value="{{store<?php echo $_store->getId() ?>}}" class="input-text<?php if ($_store->getId() == 0) : ?> required-option<?php endif; ?>" type="text" <?php if ($this->getReadOnly()) : ?> disabled="disabled" <?php endif; ?> /></td>
                        <?php endforeach; ?>
                        <td class="a-center"><input class="input-text" type="text" name="option[order][{{id}}]" value="{{sort_order}}" <?php if ($this->getReadOnly()) : ?> disabled="disabled" <?php endif; ?> /></td>
                        <td><input class="input-radio" type="radio" name="default[]" value="{{id}}" <?php if ($this->getReadOnly()) : ?> disabled="disabled" <?php endif; ?> /></td>
                        <td class="a-left">
                            <input type="hidden" class="delete-flag" name="option[delete][{{id}}]" value="" />
                            <?php if (!$this->getReadOnly()) : ?>
                                <?php echo $this->getDeleteButtonHtml() ?>
                            <?php endif; ?>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</form>
<script type="text/javascript">
    //<![CDATA[
    var optionDefaultInputType = 'radio';

    // IE removes quotes from element.innerHTML whenever it thinks they're not needed, which breaks html.
    var templateText =
        '<tr class="option-row">' +
        <?php foreach ($this->getStores() as $_store) : ?> '<td><input name="option[value][{{id}}][<?php echo $_store->getId() ?>]" value="{{store<?php echo $_store->getId() ?>}}" class="input-text<?php if ($_store->getId() == 0) : ?> required-option<?php endif; ?>" type="text" <?php if ($this->getReadOnly()) : ?> disabled="disabled"<?php endif; ?>/><\/td>' +
        <?php endforeach; ?> '<td><input class="input-text" type="text" name="option[order][{{id}}]" value="{{sort_order}}" <?php if ($this->getReadOnly()) : ?> disabled="disabled"<?php endif; ?>/><\/td>' +
        '<td class="a-center"><input class="input-radio" type="{{intype}}" name="default[]" value="{{id}}" {{checked}} <?php if ($this->getReadOnly()) : ?> disabled="disabled"<?php endif; ?>/><\/td>' +
        '<td class="a-left" id="delete_button_container_{{id}}">' +
        '<input type="hidden" class="delete-flag" name="option[delete][{{id}}]" value="" />' +
        <?php if (!$this->getReadOnly()) : ?> '<?php echo Mage::helper('core')->jsQuoteEscape($this->getDeleteButtonHtml()) ?>' +
        <?php endif; ?> '<\/td>' +
        '<\/tr>';

    var attributeOption = {
        table: $('attribute-options-table'),
        templateSyntax: /(^|.|\r|\n)({{(\w+)}})/,
        templateText: templateText,
        itemCount: 0,
        totalItems: 0,
        isReadOnly: <?php echo (int)$this->getReadOnly(); ?>,
        add: function(data) {
            this.template = new Template(this.templateText, this.templateSyntax);
            var isNewOption = false;
            if (!data.id) {
                data = {};
                data.id = 'option_' + this.itemCount;
                isNewOption = true;
            }
            if (!data.intype)
                data.intype = optionDefaultInputType;
            Element.insert(this.table, {
                after: this.template.evaluate(data)
            });
            if (isNewOption && !this.isReadOnly) {
                this.enableNewOptionDeleteButton(data.id);
            }
            this.bindRemoveButtons();
            this.itemCount++;
            this.totalItems++;
            this.updateItemsCountField();
        },
        remove: function(event) {
            var element = $(Event.findElement(event, 'tr')); // !!! Button already
            // have table parent in safari
            // Safari workaround
            element.ancestors().each(function(parentItem) {
                if (parentItem.hasClassName('option-row')) {
                    element = parentItem;
                    throw $break;
                } else if (parentItem.hasClassName('box')) {
                    throw $break;
                }
            });


            if (element) {
                var elementFlags = element.getElementsByClassName('delete-flag');
                if (elementFlags[0]) {
                    elementFlags[0].value = 1;
                }

                element.addClassName('no-display');
                element.addClassName('template');
                element.hide();
                this.totalItems--;
                this.updateItemsCountField();
            }
        },
        updateItemsCountField: function() {
            if (this.totalItems > 0) {
                $('option-count-check').value = '1';
            } else {
                $('option-count-check').value = '';
            }
        },
        enableNewOptionDeleteButton: function(id) {
            $$('#delete_button_container_' + id + ' button').each(function(button) {
                button.enable();
                button.removeClassName('disabled');
            });
        },
        bindRemoveButtons: function() {
            var buttons = $$('.delete-option');
            for (var i = 0; i < buttons.length; i++) {
                if (!$(buttons[i]).binded) {
                    $(buttons[i]).binded = true;
                    Event.observe(buttons[i], 'click', this.remove.bind(this));
                }
            }
        }

    }
    if ($('row-template')) {
        $('row-template').remove();
    }
    attributeOption.bindRemoveButtons();

    if ($('add_new_option_button')) {
        Event.observe('add_new_option_button', 'click', attributeOption.add.bind(attributeOption));
    }
    Validation.addAllThese([
        ['required-option', '<?php echo Mage::helper('core')->jsQuoteEscape(Mage::helper('vendor')->__('Failed')) ?>', function(v) {
            return !Validation.get('IsEmpty').test(v);
        }]
    ]);
    Validation.addAllThese([
        ['required-options-count', '<?php echo Mage::helper('core')->jsQuoteEscape(Mage::helper('vendor')->__('Options is required')) ?>', function(v) {
            return !Validation.get('IsEmpty').test(v);
        }]
    ]);
    <?php foreach ($this->getOptionValues() as $_value) : ?>
        attributeOption.add(<?php echo $_value->toJson() ?>);
    <?php endforeach; ?>
    //]]>
</script>